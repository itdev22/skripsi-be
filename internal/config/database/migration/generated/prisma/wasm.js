
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AccountsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Archive_installationScalarFieldEnum = {
  id: 'id',
  price: 'price',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  customer_id: 'customer_id',
  names: 'names'
};

exports.Prisma.AssetsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  quantity: 'quantity',
  price: 'price',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  url: 'url',
  email: 'email',
  phone: 'phone',
  logo_url: 'logo_url',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  description: 'description'
};

exports.Prisma.CustomerScalarFieldEnum = {
  id: 'id',
  type_of_service: 'type_of_service',
  email: 'email',
  name: 'name',
  company_id: 'company_id',
  gender: 'gender',
  card_identition: 'card_identition',
  no_identition: 'no_identition',
  area_id: 'area_id',
  phone: 'phone',
  address: 'address',
  latitude: 'latitude',
  longitude: 'longitude',
  password: 'password',
  internet_package: 'internet_package',
  ip_static: 'ip_static',
  mac_address: 'mac_address',
  job: 'job',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DeviceScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AreasScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LogsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  action: 'action',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProductsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  price: 'price',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Report_assetsScalarFieldEnum = {
  id: 'id',
  description: 'description',
  quantity: 'quantity',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Report_cashScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  credit: 'credit',
  debit: 'debit',
  description: 'description'
};

exports.Prisma.TransactionsScalarFieldEnum = {
  id: 'id',
  account_id: 'account_id',
  date: 'date',
  description: 'description',
  amount: 'amount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  type: 'type'
};

exports.Prisma.TransfersScalarFieldEnum = {
  id: 'id',
  from_account_id: 'from_account_id',
  to_account_id: 'to_account_id',
  date: 'date',
  description: 'description',
  amount: 'amount',
  tags: 'tags',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  password: 'password',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  token: 'token',
  phone: 'phone'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.accountsOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.archive_installationOrderByRelevanceFieldEnum = {
  id: 'id',
  customer_id: 'customer_id',
  names: 'names'
};

exports.Prisma.assetsOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.companyOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  url: 'url',
  email: 'email',
  phone: 'phone',
  logo_url: 'logo_url',
  description: 'description'
};

exports.Prisma.customerOrderByRelevanceFieldEnum = {
  id: 'id',
  type_of_service: 'type_of_service',
  email: 'email',
  name: 'name',
  company_id: 'company_id',
  gender: 'gender',
  card_identition: 'card_identition',
  area_id: 'area_id',
  phone: 'phone',
  address: 'address',
  password: 'password',
  internet_package: 'internet_package',
  ip_static: 'ip_static',
  mac_address: 'mac_address',
  job: 'job'
};

exports.Prisma.deviceOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.areasOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.logsOrderByRelevanceFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  action: 'action'
};

exports.Prisma.productsOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description'
};

exports.Prisma.report_assetsOrderByRelevanceFieldEnum = {
  id: 'id',
  description: 'description'
};

exports.Prisma.report_cashOrderByRelevanceFieldEnum = {
  id: 'id',
  description: 'description'
};

exports.Prisma.transactionsOrderByRelevanceFieldEnum = {
  id: 'id',
  account_id: 'account_id',
  description: 'description'
};

exports.Prisma.transfersOrderByRelevanceFieldEnum = {
  id: 'id',
  from_account_id: 'from_account_id',
  to_account_id: 'to_account_id',
  description: 'description',
  tags: 'tags'
};

exports.Prisma.usersOrderByRelevanceFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  password: 'password',
  token: 'token',
  phone: 'phone'
};
exports.transactions_type = exports.$Enums.transactions_type = {
  DEBIT: 'DEBIT',
  CREDIT: 'CREDIT'
};

exports.user_role = exports.$Enums.user_role = {
  ADMIN: 'ADMIN',
  TECHNICIAN: 'TECHNICIAN',
  FINANCE: 'FINANCE'
};

exports.Prisma.ModelName = {
  accounts: 'accounts',
  archive_installation: 'archive_installation',
  assets: 'assets',
  company: 'company',
  customer: 'customer',
  device: 'device',
  areas: 'areas',
  logs: 'logs',
  products: 'products',
  report_assets: 'report_assets',
  report_cash: 'report_cash',
  transactions: 'transactions',
  transfers: 'transfers',
  users: 'users'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
